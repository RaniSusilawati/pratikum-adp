#include <iostream>
#include <vector>

using namespace std;

// Fungsi untuk menghitung bilangan Fibonacci ke-n
unsigned long long fibonacci(int n, vector<unsigned long long>& memo) {
    if (n <= 2)
        return 1;

    if (memo[n] != 0)
        return memo[n];

    return memo[n] = fibonacci(n - 1, memo) + fibonacci(n - 2, memo);
}

int main() {
    int n;
    unsigned long long sum = 0;
    vector<unsigned long long> memo(200, 0); // Inisialisasi vektor memo

    // Inisialisasi nilai awal
    memo[1] = 1;
    memo[2] = 1;

    do {
        cout << "Masukkan nilai n (antara 3 dan 199, namun bukan 100-109): ";
        cin >> n;
    } while ((n < 3 || n > 199) || (n >= 100 && n <= 109));

    // Menghitung bilangan Fibonacci ke-n yang dimasukkan pengguna
    unsigned long long fib_n = fibonacci(n, memo);
    cout << "Bilangan Fibonacci ke-" << n << ": " << fib_n << endl;

    // Menghitung jumlah dari 1 hingga n
    for (int i = 1; i <= n; ++i) {
        sum += fibonacci(i, memo);
    }

    cout << "Jumlah dari 1 hingga " << n << " adalah: " << sum << endl;

    return 0;
}
